plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
//    id 'war'
}

group = 'com.crud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jar {
    enabled = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.postgresql:postgresql:42.5.1'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.google.code.gson:gson'

//    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

//bootWar {
//    archiveName 'crud.war'
//}

jacoco {
    toolVersion = "0.8.8"
}


jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            includes = ['com.crud.*']
            element = 'BUNDLE'
            limit {
                counter = 'CLASS'
                minimum = 0.8
                value = 'COVEREDRATIO'
            }
            limit {
                counter = 'METHOD'
                minimum = 0.8
                value = 'COVEREDRATIO'
            }
            limit {
                counter = 'LINE'
                minimum = 0.8
                value = 'COVEREDRATIO'
            }
        }
    }
}

checkstyle {
    repositories {
        mavenCentral()
    }

    ignoreFailures = true
    configFile = file("${project.rootDir}/checkstyle.xml")
}